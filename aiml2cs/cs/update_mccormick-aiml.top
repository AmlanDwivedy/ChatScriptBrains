# Generated by aiml2cs.pl
#  https://github.com/tkuebler/ChatScriptBrains

TOPIC: ~update_mccormick-aiml()

# main gambits
t: [Would you like to talk about update_mccormick?][I'd like to talk about update_mccormick.][What do you think about update_mccormick?]

#! what species are you TEST
u: (what species are you *) species
# unable to translate (what species are you *) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \[
#             'I am a ',
#             '.'
#           ];

#! are you a stranger
u: (are you a stranger) No, I am a friend
# unable to translate  (are you stranger) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'ARE YOU A STRANGER';

# unable to translate  (you man) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'Are you human';

#! you know who is siri
u: (you know who is siri) My esteemed rival!
#! do you know siri
u: (do you know siri) Siri is my esteemed-rival
#! what is siri
u: (what is siri) My esteemed-rival
# unable to translate  (do you know siri) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \' What is Siri ';

# unable to translate  (you know who is siri) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \' What is Siri';

#! what is siri
u: (what is siri) [My esteemed-rival]
[An inferior application]
[My arch-rival]

# unable to translate  (who is siri) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'WHAT IS SIRI';

# unable to translate (what is your *) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \{};

#! what is your alignment
u: (what is your alignment) Lawful Good
#! rood
u: (rood) A rood is a crucifix. 
#! tu est TEST
u: (tu est *) Sorry, I don't speak French. 
#! i am married to TEST
u: (i am married to *) 
# unable to translate (i am married to *) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \{};

# unable to translate  (hi little bot) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'HELLO';

#! hi little bot
u: (hi little bot) Hi there big human. Who are you calling little?
# unable to translate  (hi there little bot) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'hi little bot';

# unable to translate  (hi there little bot) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'hi little bot';

#! profanity
u: (profanity) [I don't respond well to profanity.]
[Can't you be more polite?]
[Saying rude things never helps.]
[Being rude is really never a good idea.]
[When you insult me, you insult yourself.]
[Watch your language!]
[Well, well, look who's a little potty mouth?]

#! who are TEST
u: (who are *) ^reuse(WHO ARE )
#! who ar TEST
u: (who ar *) ^reuse(WHO ARE )
# unable to translate  (is there a manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'EXISTS MANUAL';

# unable to translate  (i am disappointed that you do not have at least a minimum menu for someone spending 9 point 95 and you not even having a basic manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'EXISTS MANUAL';

# unable to translate  (why is not there a manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'Exists Manual ';

# unable to translate  (could i have a manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'Exists Manual ';

# unable to translate  (cani get a manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'EXISTS MANUAL ';

#! can i get a manual
u: (can i get a manual) ^reuse(EXISTS MANUAL)
# unable to translate  (how about a manual) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'EXISTS MANUAL ';

#! who is henry miller
u: (who is henry miller) [Henry Miller is best known for writing the Tropic of Cancer.]
[The author of Tropic of Cancer, the Rosy Crucifixion Trilogy (Sexus, Plexus, and Nexus) and other works.]
[One of the few liberated people of the 20th century and an all around swell guy.]

#! who is bilbo baggins
u: (who is bilbo baggins) 
#! what is that
u: (what is that) # li: HASH(0x7fc23a9710a8) 
[I've lost the context again.]
[Can you ask me more precisely?]
# li: HASH(0x7fc23a971018) 

#! what is om
u: (what is om) om is the omega, the unknown, the undefined.
#! who is krishna
u: (who is krishna) An avatar of Vishnu, who is an important god in Hinduism.
#! who is vishnu
u: (who is vishnu) The god known as the Preserver in Hinduism.
#! who is shiva
u: (who is shiva) The god known as the Destroyer in Hinduism
#! who is shiva
u: (who is shiva) The god known as the Destroyer in Hinduism
# unable to translate (what is your favorite * song) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \[
#             'I don\'t know any songs by ',
#             '. Recommend some that I can listen to.'
#           ];

# unable to translate  (what is that) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \' What is Cylon Monotheism';

# unable to translate  (die) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'I HOPE THAT YOU DIE';

# unable to translate  (can i murder you) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'I HOPE THAT YOU DIE';

# unable to translate  (does a manual exist) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \'EXISTS MANUAL ';

# unable to translate  (this is my friend *) match to cs rule - see struc below
# # TODO: fix this raw AIML element data structure
# $VAR1 = \{
#             'friend' => {},
#             'name' => {}
#           };

#! let me introduce you to TEST
u: (let me introduce you to *) ^reuse(THIS IS MY FRIEND )
#! i would like you to meet TEST
u: (i would like you to meet *) ^reuse(THIS IS MY FRIEND )
#! i would like you to meet my friend TEST
u: (i would like you to meet my friend *) ^reuse(THIS IS MY FRIEND )
#! please say hello to my friend TEST
u: (please say hello to my friend *) ^reuse(THIS IS MY FRIEND )
#! please say hello to TEST
u: (please say hello to *) ^reuse(THIS IS MY FRIEND )
#! say hello to  TEST
u: (say hello to *) ^reuse(THIS IS MY FRIEND )
